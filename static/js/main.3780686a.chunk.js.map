{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","cancelSelection","setState","this","className","type","onClick","map","good","selectedItem","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,gBAAkB,WAChB,EAAKC,SAAS,CACZF,aAAc,MAPpB,4CAWE,WAAU,IAAD,OACCA,EAAiBG,KAAKJ,MAAtBC,aAER,OACE,uBAAMI,UAAU,oBAAhB,UACoB,KAAjBJ,EACG,oBAAII,UAAU,QAAd,+BAEA,qBAAIA,UAAU,sCAAd,oBACMJ,EADN,gBAIE,wBACE,UAAQ,cACRK,KAAK,SACLD,UAAU,cACVE,QAASH,KAAKF,qBAKtB,uBAAOG,UAAU,QAAjB,SACE,gCACGP,EAAMU,KAAI,SAACC,GACV,IAAMC,EAAe,CACnB,+BACAT,IAAiBQ,GAGnB,OACE,qBACE,UAAQ,OACRJ,UAAWM,IAAWD,GAFxB,UAIGT,IAAiBQ,EAEd,6BACE,wBACE,UAAQ,YACRH,KAAK,SACLD,UAAU,SACVE,QAAS,WACP,EAAKJ,SAAS,CACZF,aAAcQ,KANpB,iBAeF,6BACE,wBACE,UAAQ,eACRH,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKL,gBAJhB,iBAUN,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGI,qBA3ErB,GAAyBG,aCnBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3780686a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  cancelSelection = () => {\n    this.setState({\n      selectedGood: '',\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood === ''\n          ? <h1 className=\"title\">No goods selected</h1>\n          : (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {`${selectedGood} is selected`}\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.cancelSelection}\n              />\n            </h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => {\n              const selectedItem = {\n                'has-background-success-light':\n                selectedGood === good,\n              };\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  className={classNames(selectedItem)}\n                >\n                  {selectedGood !== good\n                    ? (\n                      <td>\n                        <button\n                          data-cy=\"AddButton\"\n                          type=\"button\"\n                          className=\"button\"\n                          onClick={() => {\n                            this.setState({\n                              selectedGood: good,\n                            });\n                          }}\n                        >\n                          +\n                        </button>\n                      </td>\n                    )\n                    : (\n                      <td>\n                        <button\n                          data-cy=\"RemoveButton\"\n                          type=\"button\"\n                          className=\"button is-info\"\n                          onClick={this.cancelSelection}\n                        >\n                          -\n                        </button>\n                      </td>\n                    )}\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}